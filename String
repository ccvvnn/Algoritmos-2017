#include "stdafx.h"
#include <iostream>
#include "conio.h"
#include <string>

using namespace std;

void Uso_de_getline(string *nombre);
void Uso_de_length(string *nombre,int *longitud);
void Uso_de_compare(string *nombre,string *variable2);
void Numero_de_vocales(string *nombre,int *longitud);
void Uso_de_at(string *nombre,int *longitud);
void Uso_de_substr(string *nombre,int *longitud);
void Uso_de_swap(string *nombre, string *variable2);
void Invertir_frase(string *nombre,int *longitud);
void Quitar_Vocales(string *nombre,int *longitud);

void main()
{
	//char aux;

	string variable2,nombre; //declaración de string
	int longitud;

	Uso_de_getline(&nombre);
	Uso_de_length(&nombre,&longitud);
	Uso_de_compare(&nombre,&variable2);
	Numero_de_vocales(&nombre,&longitud);
	Uso_de_at(&nombre,&longitud);
	Uso_de_substr(&nombre,&longitud);
	Uso_de_swap(&nombre,&variable2);
	Invertir_frase(&nombre,&longitud);
	Quitar_Vocales(&nombre,&longitud);

	_getch();
}

void Uso_de_getline(string *nombre){   
	
	cout<<" Ejemplo de uso de getline() para ingresar cadena de caracteres: "<<endl;
	cout<<" Ingrese un nombre: ";
	getline(cin,*nombre);
	cout<<endl<<*nombre<<endl;
	cout<<endl;
} 
//Agarra todo el string, incluyendo espacios y comas
void Uso_de_length(string *nombre,int *longitud){
	string nom = *nombre;
	cout<<"Ejemplo de uso de .length() para determinar la longitud de un string: "<<endl;
	*longitud = nom.length();
	cout<<endl<<"El string tiene: "<<*longitud<<" de longitud"<<endl;
}
//Sirve para mostrar el numero de caracteres que contiene el string
void Uso_de_compare(string *nombre,string *variable2){
	string nom = *nombre;
	cout<<endl<<"Ejemplo de .compare() para determinar si dos cadenas son iguales"<<endl;
	cout<<endl<<"Ingrese un nombre para comparar con "<<*nombre<<endl;
	getline(cin,*variable2);

	if(nom.compare(*variable2)==0){
		cout<<endl<<"Los datos coinciden"<<endl;
		}
	else{
		cout<<nom<<" Es diferente que "<<*variable2<<" "<<nom.compare(*variable2)<<endl;
		}
}
//Compara 2 string diciendo si son iguales[0] o no[-1,1]
void Numero_de_vocales(string *nombre,int *longitud){
	int cont = 0;
	string nom = *nombre;
	cout<<endl<<"Ejemplo de uso de elementos individuales buscando vocales: "<<endl;
	for (int i=0;i<*longitud;i++){
		if(nom[i]=='a'||nom[i]=='e'||nom[i]=='i'||nom[i]=='o'||nom[i]=='u'){
			cont++;
		}
	}
	cout<<"Numero de Vocales en "<<nom<<" = "<<cont<<endl;
}

void Uso_de_at(string *nombre,int *longitud){ 
	cout<<endl<<" Ejemplo de uso de elementos individuales con .at "<<endl;
	int cont=0;
	string nom = *nombre;
	for (int i=0; i<*longitud;i++){
		if(nom.at(i)=='a'||nom.at(i)=='e'||nom.at(i)=='i'||nom.at(i)=='o'||nom.at(i)=='u'){
			cont++;
		}
	}
	cout<<"Numero de Vocales en "<<nom<<" = "<<cont<<endl;
}
/*En vez de ocupar corchetes [] despues del string,'nombre[]' se ocupa 'nombre.at' 
  para seleccionar la casilla donde se encuentra el caracter*/
void at_Busca_Espacios(string *nombre,int *longitud){
	string nom = *nombre;
	for (int i=0;i<*longitud;i++){
		if(nom.at(i)=' '){
			cout<<endl<<" Existe espacio en : "<<i<<endl;
		}
	}
}

void Uso_de_substr(string *nombre,int *longitud){
	string nom = *nombre;
	cout<<endl<<" Ejemplo de uso de '.substr()' "<<endl;
	cout<<endl<<" Ingrese desde donde desea desea extraer el 'substr' "<<endl;
	int pos;
	cin>>pos;
	cout<<endl<<nom.substr(pos,*longitud-pos); 
	/* Desde la posicion introducida contará (longitud-pos), ej. si pos = 2, 
	los caracteres que se mostraran seran [3][4][5]...[longitud-pos]*/
}
/* Saca una parte del string */
void Uso_de_swap(string *nombre, string *variable2){
	string cambio1 = *nombre;
	string cambio2 = *variable2;
	cout<<endl<<"Intercambio de strings: "<<endl;
	cout<<"1 = "<<cambio1 <<endl;
	cout<<"2 = "<<cambio2 <<endl;
	
	cambio1.swap(cambio2);

	cout<<endl<<"1 = "<<cambio1 <<endl;
	cout<<"2 = "<<cambio2 <<endl;

}
/*Intercambia strings*/
void Invertir_frase(string *nombre,int *longitud){
	string var=*nombre;
	string aux;
	for (int i=0;i<*longitud/2;i++)
	{
		aux=var[i];
	    var[i]=var[*longitud-1-i];
		nombre[*longitud-1-i]=aux;
	}
	cout <<"La cadena invertida es: "<<var<<endl;
	
	if (var.compare(*nombre)==0)
		cout<<"Es un palindromo";
}
/*Palindromo*/
void Quitar_Vocales(string *nombre,int *longitud){
	cout<<endl<<" Eliminar vocales con .at "<<endl;
	int cont=0;
	string nom = *nombre;
	string nom2 = *nombre;
	for (int i=0; i<*longitud;i++){
		if(nom.at(i)!='a' && nom.at(i)!='e'&& nom.at(i)!='i'&& nom.at(i)!='o'&& nom.at(i)!='u'){
			nom2[cont]=nom[i];
			cont++;
		}
	}
	cout<<nom<<" sin vocales es = "<<nom2<<endl;
}
